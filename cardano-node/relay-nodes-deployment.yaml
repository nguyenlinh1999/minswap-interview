apiVersion: apps/v1
kind: Deployment
metadata:
  name: cardano-relay
  namespace: cardano
  labels:
    app: cardano-relay
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25% 
  selector:
    matchLabels:
      app: cardano-relay
  template:
    metadata:
      labels:
        app: cardano-relay
    spec:
      tolerations:
      - key: "node_role"
        value: "cardano"
        effect: "NoSchedule"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: "node_role"
                    operator: "In"
                    values:
                      - "cardano"
      dnsPolicy: "None"
      dnsConfig:
        nameservers:
        - 8.8.8.8
      initContainers:
      - name: mithril-client
        image: ghcr.io/input-output-hk/mithril-client:latest
        env:
        - name: AGGREGATOR_ENDPOINT
          value: "https://aggregator.release-preprod.api.mithril.network/aggregator"
        command:
        - /bin/sh
        - -c
        - |
          echo "Checking if DB snapshot exists..."
          if [ ! -d /data/db ] || [ -z "$(ls -A /data/db)" ]; then
            echo "No DB found, downloading latest snapshot..."
            /app/bin/mithril-client cardano-db download latest --download-dir /data
            ls -l /data/db
          else
            echo "DB snapshot already exists, skipping download."
            ls -l /data/db
          fi
        volumeMounts:
        - name: data
          mountPath: /data
      containers:
      - name: cardano-node
        #image: ghcr.io/intersectmbo/cardano-node:10.2.1-docker
        image: ghcr.io/intersectmbo/cardano-node:10.1.4
        env:
        - name: NETWORK
          value: "preprod"
        command:
        - /bin/bash
        - -c
        - cardano-node run --config /config/preprod-config.json --topology /config/relay-topology.json --database-path /data/db --socket-path /ipc/node.socket --port 3001
        ports:
        - containerPort: 3001
          name: node-port
        - containerPort: 12798
          name: metrics
        volumeMounts:
        - name: config
          mountPath: /config
        - name: genesis
          mountPath: /genesis
        - name: data
          mountPath: /data
        - name: ipc
          mountPath: /ipc
        resources:
          requests:
            cpu: "500m"
            memory: "2Gi"
          limits:
            cpu: "1000m"
            memory: "4Gi"
      volumes:
      - name: config
        configMap:
          name: cardano-config
      - name: genesis
        configMap:
          name: cardano-genesis
      - name: data
        emptyDir: {}
      - name: ipc
        emptyDir: {}


---
apiVersion: v1
kind: Service
metadata:
  name: cardano-relay-service
  namespace: cardano
spec:
  selector:
    app: cardano-relay
  ports:
  - port: 3001
    targetPort: 3001
    protocol: TCP
    name: node-port
  type: ClusterIP